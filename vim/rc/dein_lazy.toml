# auto complete
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
build = ':UpdateRemotePlugins'
hook_post_source = '''
    inoremap <silent><expr> <TAB>
          \ pumvisible() ? "\<C-n>" :
          \ <SID>check_back_space() ? "\<TAB>" :
          \ deoplete#manual_complete()
    function! s:check_back_space() abort "{{{
      let col = col('.') - 1
      return !col || getline('.')[col - 1]  =~ '\s'
    endfunction"}}} 
    inoremap <expr><S-TAB>  pumvisible() ? "<C-p>" : "<C-h>"

    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_smart_case = 1
    let g:deoplete#enable_camel_case = 0
    let g:deoplete#enable_ignore_case = 0
    
    let g:deoplete#auto_complete_delay = 0
    let g:deoplete#auto_refresh_delay = 100
    
    let g:deoplete#keyword_patterns = {}
    let g:deoplete#keyword_patterns._ = '[a-zA-Z_]\k*\(?'
    let g:deoplete#keyword_patterns.tex = '[^\w|\s][a-zA-Z_]\w*'
    
    let g:deoplete#omni#input_patterns = {}
    let g:deoplete#omni#input_patterns.python = ''
    let g:deoplete#omni#functions = {}
    
    let g:deoplete#skip_chars = ['(', ')']
    
    " Hidden autocomplete preview
    set completeopt-=preview
'''
#set completeopt-=preview
#autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif

# deoplete for jedi ok
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python', 'python3']

# for flake8 ok
[[plugins]]
repo = 'nvie/vim-flake8'
on_ft = ['python' ,'python3']
hook_post_source = '''
    let g:flake8_quickfix_height=7
    let g:flake8_show_in_gutter=1
    let g:flake8_show_in_file=1
    autocmd BufWritePost *.py call Flake8()
'''

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['python' ,'python3']
hook_post_source = '''
    let g:ale_linters = {'python': ['flake8']}
    let g:ale_fixers = {'python': ['autopep8', 'black', 'isort']}

    let g:ale_python_flake8_executable = g:python3_host_prog
    let g:ale_python_flake8_options = '-m flake8'
    let g:ale_python_autopep8_executable = g:python3_host_prog
    let g:ale_python_autopep8_options = '-m autopep8'
    let g:ale_python_isort_executable = g:python3_host_prog
    let g:ale_python_isort_options = '-m isort'
    
    let g:ale_sign_column_always = 1
    let g:ale_lint_on_enter = 1
    let g:ale_lint_on_save = 1
    let g:ale_lint_on_text_changed = 'never'

    nmap [ale] <Nop>
    map <Space>l [ale]
    nmap <silent> [ale]<C-P> <Plug>(ale_previous)
    nmap <silent> [ale]<C-N> <Plug>(ale_next)
'''
