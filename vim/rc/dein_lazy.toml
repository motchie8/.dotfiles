# python auto complete
# [[plugins]]
# repo = 'zchee/deoplete-jedi'
# on_ft = 'python'
# hook_source = '''
#     let g:deoplete#sources#jedi#python_path = system('PYTHON_VERSION=`pyenv version` && echo -n ${PYENV_PATH}/versions/${PYTHON_VERSION%% *}/bin/python')
# '''
# # python auto complete
# [[plugins]]
# repo = 'davidhalter/jedi-vim'
# on_ft = 'python'
# hook_source = '''
#     let g:jedi#auto_vim_configuration = 0
#     let g:jedi#completions_enabled = 0
#     let g:jedi#smart_auto_mappings = 1
#     let g:jedi#use_tabs_not_buffers = 0 
#     autocmd FileType python setlocal completeopt-=preview
#     let g:jedi#goto_command = "<Space>g"
#     let g:jedi#goto_assignments_command = "<Space>G"
#     highlight jediFat ctermbg=darkgray
# '''

# python linter
# [[plugins]]
# repo = 'w0rp/ale'
# on_ft = 'python'
# hook_source = '''
#     let g:ale_linters = {'python': ['flake8']}
#     "let g:ale_linters = {'python': ['flake8', 'pylint']}
#     let g:ale_fixers = {'python': ['autopep8', 'black', 'isort']}
#     "let g:ale_fixers = {'python': ['black']}
# 
#     let g:ale_python_flake8_executable = g:python3_host_prog
#     let g:ale_python_pylint_executable = g:python3_host_prog
#     let g:ale_python_autopep8_executable = g:python3_host_prog
#     let g:ale_python_black_executable = g:python3_host_prog
#     let g:ale_python_isort_executable = g:python3_host_prog
# 
#     let g:ale_python_flake8_options = '-m flake8 --ignore E501,E225,W503,E203'
#     let g:ale_python_pylint_options = '-m pylint'
#     let g:ale_python_autopep8_options = '-m autopep8'
#     let g:ale_python_black_options = '-m black'
#     let g:ale_python_isort_options = '-m isort'
#     
#     let g:ale_set_loclist = 1
#     let g:ale_set_quickfix = 1
#     let g:ale_sign_column_always = 0
# 
#     let g:ale_fix_on_save = 1
#     let g:ale_lint_on_enter = 0
#     let g:ale_lint_on_save = 1
#     let g:ale_lint_on_text_changed = 'never'
#     let g:ale_sign_error = 'EE' 
#     let g:ale_sign_warning = 'WW'
#     let g:ale_echo_msg_format = '[%linter%] [%severity%] %s'
# 
#     nmap <silent> <Space>k <Plug>(ale_previous_wrap)
#     nmap <silent> <Space>j <Plug>(ale_next_wrap)
#     nmap <silent> <Space>a <Plug>(ale_fix)
# '''
[[plugins]]
repo = 'lambdalisue/vim-pyenv'
on_ft = ['rust', 'python']
hook_add = '''
    let g:rustfmt_autosave = 1
'''

[[plugins]]
# on_ft = ["python", "rust"]
repo = "puremourning/vimspector"
# build = "./install_gadget.py --enable-python --enable-rust"
build = "./install_gadget.py --basedir $HOME/.dotfiles/vimspector-config --enable-python --enable-rust"
hook_add = '''
    let g:vimspector_enable_mappings = 'HUMAN'
    " let g:vimspector_base_dir = expand('$HOME/.dotfiles/vimspector-config')
    " for normal mode - the word under the cursor
    nmap <Space>di :VimspectorBalloonEval<CR>
    " for visual mode, the visually selected text
    xmap <Space>di :VimspectorBalloonEval<CR>
    " debugger command
    nnoremap <silent> <Space>db :call vimspector#Launch()<CR>
'''
