# plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'

# color schema
[[plugins]]
repo = 'cocopon/iceberg.vim'

# file finder
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add= '''
    nnoremap <silent>sd :Denite buffer<CR>
    nnoremap <silent>sf :Denite file/rec<CR>
    nnoremap <silent>sg :Denite grep<CR>
  " Define mappings
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
  endfunction  
'''

# tree
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    nnoremap <silent><Space>t :NERDTreeToggle<CR>
    nnoremap <silent><Space>T :NERDTree<CR>
'''

# show indent
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# auto complete
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    " Use deoplete.
    let g:deoplete#enable_at_startup = 1
    " Use smartcase.
    call deoplete#custom#option('smart_case', v:true)
    call deoplete#custom#option('auto_complete_delay', 150)
    " use auto select
    set completeopt+=noinsert
    " <C-h>, <BS>: close popup and delete backword char.
    inoremap <expr><C-h> deoplete#smart_close_popup()."<C-h>"
    inoremap <expr><BS>  deoplete#smart_close_popup()."<C-h>"
    inoremap <expr><S-TAB>  pumvisible() ? "<C-p>" : "<S-TAB>" 
    " <CR>: insert selected word \
    imap <expr><CR>  pumvisible() ? "<C-y>" : "<CR>"
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
    let g:neosnippet#enable_snipmate_compatibility = 1
    let g:neosnippet#snippets_directory='~/.dotfiles/vim/snippets'
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
# terminal
[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
    let g:neoterm_size = 8
    let g:neoterm_autoscroll = 1
    " nnoremap <silent> <Space>c :botright Tnew<CR>:T source ~/.bash_profile<CR>
    nnoremap <silent> <Space>c :botright Tnew<CR>
    tnoremap <silent> <ESC> <C-\><C-n>
    tnoremap <silent> jj <C-\><C-n>
    nnoremap <silent> <Space>e :TREPLSendLine<CR>
    vnoremap <silent> <Space>e V:TREPLSendSelection<CR>
'''

# bar
[[plugins]]
repo = 'vim-airline/vim-airline'

# bar thema
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
    let g:AirlineTheme = "minimalist"
'''

# resize window
[[plugins]]
repo = 'simeji/winresizer'

# git
[[plugins]]
repo = "airblade/vim-gitgutter"

# git
[[plugins]]
repo = "tpope/vim-fugitive"

# easymotion
[[plugins]]
repo = "Lokaltog/vim-easymotion"
hook_add = '''
    let g:EasyMotion_do_mapping = 0 
    "nmap w <Plug>(easymotion-overwin-w)
    nmap f <Plug>(easymotion-overwin-f2)
'''

# gtags
#[[plugins]]
#repo = 'lighttiger2505/gtags.vim'
#hook_add = '''
#    " Options
#    let g:Gtags_Auto_Map = 0
#    let g:Gtags_OpenQuickfixWindow = 1
#    " Keymap
#    " nnoremap <silent> <Space>f :Gtags -f %<CR>
#    " nnoremap <silent> <Space>j :GtagsCursor<CR> 
#    " Show definetion of function cousor word on quickfix
#    nnoremap <silent> <Space>g :<C-u>exe("Gtags ".expand('<cword>'))<CR>
#    " Show reference of cousor word on quickfix
#    nnoremap <silent> <Space>G :<C-u>exe("Gtags -r ".expand('<cword>'))<CR>
#'''
#
## gtags auto generate
#[[plugins]]
#repo = 'jsfaint/gen_tags.vim'
#hook_add = '''
#    let g:gen_tags#ctags_auto_gen = 1
#    let g:gen_tags#gtags_auto_gen = 1
#'''
